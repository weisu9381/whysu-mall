<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="top.whysu.manager.mapper.TbUserMapper">
    <resultMap id="BaseResultMap" type="top.whysu.manager.pojo.TbUser">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="created" property="created" jdbcType="TIMESTAMP"/>
        <result column="updated" property="updated" jdbcType="TIMESTAMP"/>
        <result column="sex" property="sex" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="state" property="state" jdbcType="INTEGER"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="role_id" property="roleId" jdbcType="INTEGER"/>
        <result column="file" property="file" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, username, password, phone, email, created, updated, sex, address, state, description,
        role_id, file
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="top.whysu.manager.pojo.TbUserExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from tb_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from tb_user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        DELETE FROM tb_user
        WHERE id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="top.whysu.manager.pojo.TbUserExample">
        delete from tb_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="top.whysu.manager.pojo.TbUser">
        INSERT INTO tb_user (id, username, password,
                             phone, email, created,
                             updated, sex, address,
                             state, description, role_id,
                             file)
        VALUES (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
                                       #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
                                       #{created,jdbcType=TIMESTAMP},
                                       #{updated,jdbcType=TIMESTAMP}, #{sex,jdbcType=VARCHAR},
                                       #{address,jdbcType=VARCHAR},
                                       #{state,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR},
                #{roleId,jdbcType=INTEGER},
                #{file,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="top.whysu.manager.pojo.TbUser">
        insert into tb_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="created != null">
                created,
            </if>
            <if test="updated != null">
                updated,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="file != null">
                file,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="created != null">
                #{created,jdbcType=TIMESTAMP},
            </if>
            <if test="updated != null">
                #{updated,jdbcType=TIMESTAMP},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="file != null">
                #{file,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="top.whysu.manager.pojo.TbUserExample" resultType="java.lang.Long">
        select count(*) from tb_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update tb_user
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.username != null">
                username = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.phone != null">
                phone = #{record.phone,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.created != null">
                created = #{record.created,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updated != null">
                updated = #{record.updated,jdbcType=TIMESTAMP},
            </if>
            <if test="record.sex != null">
                sex = #{record.sex,jdbcType=VARCHAR},
            </if>
            <if test="record.address != null">
                address = #{record.address,jdbcType=VARCHAR},
            </if>
            <if test="record.state != null">
                state = #{record.state,jdbcType=INTEGER},
            </if>
            <if test="record.description != null">
                description = #{record.description,jdbcType=VARCHAR},
            </if>
            <if test="record.roleId != null">
                role_id = #{record.roleId,jdbcType=INTEGER},
            </if>
            <if test="record.file != null">
                file = #{record.file,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update tb_user
        set id = #{record.id,jdbcType=BIGINT},
        username = #{record.username,jdbcType=VARCHAR},
        password = #{record.password,jdbcType=VARCHAR},
        phone = #{record.phone,jdbcType=VARCHAR},
        email = #{record.email,jdbcType=VARCHAR},
        created = #{record.created,jdbcType=TIMESTAMP},
        updated = #{record.updated,jdbcType=TIMESTAMP},
        sex = #{record.sex,jdbcType=VARCHAR},
        address = #{record.address,jdbcType=VARCHAR},
        state = #{record.state,jdbcType=INTEGER},
        description = #{record.description,jdbcType=VARCHAR},
        role_id = #{record.roleId,jdbcType=INTEGER},
        file = #{record.file,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="top.whysu.manager.pojo.TbUser">
        update tb_user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="created != null">
                created = #{created,jdbcType=TIMESTAMP},
            </if>
            <if test="updated != null">
                updated = #{updated,jdbcType=TIMESTAMP},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=INTEGER},
            </if>
            <if test="file != null">
                file = #{file,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="top.whysu.manager.pojo.TbUser">
        UPDATE tb_user
        SET username    = #{username,jdbcType=VARCHAR},
            password    = #{password,jdbcType=VARCHAR},
            phone       = #{phone,jdbcType=VARCHAR},
            email       = #{email,jdbcType=VARCHAR},
            created     = #{created,jdbcType=TIMESTAMP},
            updated     = #{updated,jdbcType=TIMESTAMP},
            sex         = #{sex,jdbcType=VARCHAR},
            address     = #{address,jdbcType=VARCHAR},
            state       = #{state,jdbcType=INTEGER},
            description = #{description,jdbcType=VARCHAR},
            role_id     = #{roleId,jdbcType=INTEGER},
            file        = #{file,jdbcType=VARCHAR}
        WHERE id = #{id,jdbcType=BIGINT}
    </update>
    <select id="getRolesByUsername" resultType="String">
        SELECT r.name
        FROM
            tb_user u
            JOIN tb_role r ON u.role_id = r.id
        WHERE
            u.username = #{username}
    </select>
    <select id="getPermissionsByUsername" resultType="String">
        SELECT p.permission
        FROM
            tb_user u
            JOIN tb_role r ON u.role_id = r.id
            JOIN tb_role_perm rp ON u.role_id = rp.role_id
            JOIN tb_permission p ON p.id = rp.permission_id
        WHERE
            u.username = #{username}
    </select>
    <select id="getPermsByRoleId" resultType="String">
        SELECT p.name
        FROM
            tb_role r
            JOIN tb_role_perm rp ON r.id = rp.role_id
            JOIN tb_permission p ON p.id = rp.permission_id
        WHERE
            r.id = #{id}
    </select>
</mapper>